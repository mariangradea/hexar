plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ro.btrl'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openapi_version"
    implementation 'org.mapstruct:mapstruct'
    implementation "jakarta.validation:jakarta.validation-api:$validation_api_version"
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mapstruct:mapstruct'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
    dependencies {
        dependency "org.mapstruct:mapstruct:$mapstruct_version"
        dependency "org.mapstruct:mapstruct-processor:$mapstruct_version"
        dependency "org.springdoc:springdoc-openapi-starter-webmvc-ui:$openapi_version"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
